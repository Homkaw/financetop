name: Build APK

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /home/runner/android-sdk
      PATH: ~/.local/bin:/home/runner/android-sdk/platform-tools:/home/runner/android-sdk/cmdline-tools/latest/bin:/home/runner/android-sdk/build-tools/33.0.2:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    steps:
    - name: üîΩ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      uses: actions/checkout@v3

    - name: üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ Python-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      uses: actions/cache@v3
      id: cache-python
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

    - name: ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (Ubuntu)
      run: |
        set -e
        sudo apt update
        sudo apt install -y zip unzip openjdk-11-jdk adb pkg-config libgl1-mesa-dev \
          libgles2-mesa-dev libffi-dev libssl-dev ant wget autoconf automake libtool libtool-bin build-essential m4

    - name: üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        set -e
        export M4=m4
        python -m ensurepip --upgrade
        python -m pip install --upgrade pip setuptools wheel
        pip install cython buildozer "python-for-android[full]"
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ Android SDK
      uses: actions/cache@v3
      id: cache-android-sdk
      with:
        path: ${{ env.ANDROID_SDK_ROOT }}
        key: android-sdk-${{ runner.os }}-${{ hashFiles('buildozer.spec') }} # –ö–ª—é—á –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ buildozer.spec, —Ç.–∫. –≤ –Ω–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∫–∏

    - name: ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Android SDK –∏ Build-Tools
      run: |
        set -e
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip -d latest

        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        mv latest/cmdline-tools/* latest/
        rm -r latest/cmdline-tools

        # –°–∏–º–ª–∏–Ω–∫ –¥–ª—è buildozer
        ln -s $ANDROID_SDK_ROOT/cmdline-tools/latest $ANDROID_SDK_ROOT/tools

        yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        $ANDROID_SDK_ROOT/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ python-for-android
      run: |
        set -e
        mkdir -p .buildozer/android/platform
        git clone https://github.com/kivy/python-for-android.git .buildozer/android/platform/python-for-android

    - name: üßº –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞ APK
      run: |
        set -e
        export M4=m4
        buildozer android clean
        buildozer android debug --verbose

    - name: üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ APK –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
      uses: actions/upload-artifact@v4
      with:
        name: Financetop-APK
        path: bin/*.apk